{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","components/BottomControls.jsx","App.js","reportWebVitals.js","index.js"],"names":["CoinRow","styled","tr","Coin","rank","name","ticker","price","market_cap","balance","showBalance","handleRefresh","tickerId","action","method","onClick","event","preventDefault","Table","table","CoinList","props","coinData","slice","firstCoin","count","map","value","key","Section","section","AccountBalance","buttonText","balanceText","amount","handleShowBalance","Header","header","H1","h1","Img","img","ExchangeHeader","src","logo","alt","Component","BottomControls","handlePrevPage","handleNextPage","handleLoadMoreCoins","formatPrice","parseFloat","Number","toFixed","App","useState","setShwoBalance","setCoinData","coinCount","setCoinCount","setFirstCoin","componentDidMount","a","axios","get","coinsResponse","data","sort","b","coinPriceData","coin","id","symbol","quotes","USD","useEffect","length","console","log","changeValueTickerId","response","newPrice","newMarketCap","refreshedData","values","newValues","className","Math","max","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAKMA,EAAUC,IAAOC,GAAV,uGAmCEC,EA5BF,SAAC,GAA4F,IAA3FC,EAA0F,EAA1FA,KAAMC,EAAoF,EAApFA,KAAMC,EAA8E,EAA9EA,OAAQC,EAAsE,EAAtEA,MAAOC,EAA+D,EAA/DA,WAAYC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,SAKvF,OACI,eAACZ,EAAD,WACI,6BAAKI,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACJE,EAAc,6BAAKD,IAAgB,KACpC,6BACI,sBAAMI,OAAO,IAAIC,OAAO,OAAxB,SACA,wBAAQC,QAdA,SAACC,GACjBA,EAAMC,iBACNN,EAAcC,IAYN,6BCvBVM,EAAQjB,IAAOkB,MAAV,4GAMI,SAASC,EAAUC,GAChC,OACE,eAACH,EAAD,WACE,gCACE,+BACE,mCACA,sCACA,wCACA,uCACA,4CACCG,EAAMX,YAAc,yCAAmB,KACxC,6CAGJ,gCAEIW,EAAMC,SAASC,MAAMF,EAAMG,UAAWH,EAAMG,UAAYH,EAAMI,OAAOC,KAAI,SAAAC,GACrE,OAAO,cAAC,EAAD,CAEDhB,cAAiBU,EAAMV,cACvBP,KAAMuB,EAAMvB,KACZC,KAAMsB,EAAMtB,KACZC,OAAQqB,EAAMrB,OACdC,MAAOoB,EAAMpB,MACbC,WAAYmB,EAAMnB,WAClBC,QAASkB,EAAMlB,QACfC,YAAaW,EAAMX,YACnBE,SAAUe,EAAMC,KATXD,EAAMC,IAAMD,EAAMC,IAAMD,EAAMrB,gBCxBvD,IAAMuB,EAAU5B,IAAO6B,QAAV,2IAOE,SAASC,EAAgBV,GACpC,IAAMW,EAAaX,EAAMX,YAAc,eAAiB,eAClDuB,EAAcZ,EAAMX,YAAN,oBAAiCW,EAAMa,QAAW,GACtE,OACI,eAACL,EAAD,WAEKI,EACD,wBAAQlB,QAASM,EAAMc,kBAAvB,SAA2CH,O,4CClBxC,MAA0B,iCCInCI,EAASnC,IAAOoC,OAAV,6LASNC,EAAKrC,IAAOsC,GAAV,qEAKFC,EAAMvC,IAAOwC,IAAV,sEAKYC,E,4JACjB,WACI,OACI,eAACN,EAAD,WACI,cAACI,EAAD,CAAKG,IAAKC,EAAMC,IAAI,eACpB,cAACP,EAAD,mC,GAL4BQ,aCnBtCjB,EAAU5B,IAAO6B,QAAV,+GAME,SAASiB,EAAgB1B,GACpC,OACI,eAAC,EAAD,WACI,wBAAQN,QAASM,EAAM2B,eAAvB,2BACA,wBAAQjC,QAASM,EAAM4B,eAAvB,uBACA,wBAAQlC,QAASM,EAAM6B,oBAAvB,uBAHJ,WAIa7B,EAAMG,UAAY,EAJ/B,OAIsCH,EAAMG,UAAYH,EAAMI,S,qBCJtE,SAAS0B,EAAa5C,GACpB,OAAO6C,WAAWC,OAAO9C,GAAO+C,QAAQ,IAG3B,SAASC,EAAKlC,GAE3B,MAA8BmC,mBAAS,KAAvC,mBAAO/C,EAAP,KACA,GADA,KACsC+C,oBAAS,IAA/C,mBAAO9C,EAAP,KAAoB+C,EAApB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOlC,EAAP,KAAiBoC,EAAjB,KACA,EAAkCF,mBAXT,IAWzB,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOhC,EAAP,KAAkBqC,EAAlB,KAEMC,EAAiB,uCAAG,8BAAAC,EAAA,sEAEIC,IAAMC,IAAI,0CAFd,QAElBC,EAFkB,QAGVC,KAAKC,MAAK,SAAUL,EAAGM,GAAI,OAAON,EAAE3D,KAAOiE,EAAEjE,QACvDkE,EAAgBJ,EAAcC,KAAKzC,KAAI,SAAS6C,GAClD,MAAO,CACL3C,IAAK2C,EAAKC,GACVnE,KAAMkE,EAAKlE,KACXC,OAAQiE,EAAKE,OACbhE,QAAS,EACTF,MAAO4C,EAAYoB,EAAKG,OAAOC,IAAIpE,OACnCC,WAAY2C,EAAYoB,EAAKG,OAAOC,IAAInE,YACxCJ,KAAMmE,EAAKnE,SAGfsD,EAAYY,GAfY,2CAAH,qDAsBvBM,qBAAU,WACgB,IAApBtD,EAASuD,OAEXf,IANFgB,QAAQC,IAAI,yBAcd,IAAMpE,EAAa,uCAAG,WAAOqE,GAAP,qBAAAjB,EAAA,sEAECC,IAAMC,IAlDb,0CAkD8Be,GAFxB,OAEhBC,EAFgB,OAGdC,EAAW/B,EAAY8B,EAASd,KAAKO,OAAOC,IAAIpE,OAChD4E,EAAehC,EAAY8B,EAASd,KAAKO,OAAOC,IAAInE,YACtD4E,EAAgB9D,EAASI,KAAI,SAAC2D,GAChC,IAAIC,EAAS,eAAOD,GAKpB,OAJIC,EAAU1D,MAAQoD,IACpBM,EAAU/E,MAAQ2E,EAClBI,EAAU9E,WAAa2E,GAElBG,KAET5B,EAAY0B,GAbQ,2CAAH,sDAqCnB,OACE,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACxD,EAAD,CAAgBG,OAAQzB,EAASC,YAAaA,EAAayB,kBAxBrC,WAGxBsB,GADsB/C,MAuBpB,cAACU,EAAD,CAAUE,SAAUA,EAAUE,UAAWA,EAAWC,MAAOkC,EAAWhD,cAAeA,EAAeD,YAAaA,IACjH,cAACqC,EAAD,CAAgBtB,MAAOkC,EAAWnC,UAAWA,EAAW0B,oBApBhC,WAE1BU,EAAaD,EAvEU,KAyF6EV,eAV/E,WAErBY,EAAarC,EAAYmC,IAQ2GX,eAf/G,WAErBa,EAAa2B,KAAKC,IAAIjE,EAAYmC,EAAW,UCtFjD,IAYe+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c4b027b.chunk.js","sourcesContent":["//import React, { Component } from 'react'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst CoinRow = styled.tr `\r\n    td {\r\n        border: 1px solid #cccccc;\r\n        width: 25vh;\r\n    }\r\n`;\r\n\r\nconst Coin = ({rank, name, ticker, price, market_cap, balance, showBalance, handleRefresh, tickerId}) => {\r\n    const handleClick = (event) => {\r\n        event.preventDefault();\r\n        handleRefresh(tickerId);\r\n    }\r\n    return (\r\n        <CoinRow>\r\n            <td>{rank}</td>\r\n            <td>{name}</td>\r\n            <td>{ticker}</td>\r\n            <td>{price}</td>\r\n            <td>{market_cap}</td>\r\n            {showBalance ? <td>{balance}</td> : null}\r\n            <td>\r\n                <form action=\"#\" method=\"POST\">\r\n                <button onClick={handleClick}>Refresh</button>\r\n                </form>\r\n            </td>\r\n        </CoinRow>\r\n    )\r\n};\r\n\r\nCoin.propTypes = {\r\n     name: PropTypes.string.isRequired,\r\n     ticker: PropTypes.string.isRequired,\r\n     price: PropTypes.number.isRequired,\r\n };\r\n\r\nexport default Coin;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Coin from '../Coin/Coin';\r\n\r\nconst Table = styled.table `\r\n  margin: 50px auto 50px auto;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nexport default function CoinList (props) {\r\n  return (\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          <th>Price</th>\r\n          <th>Market Cap</th>\r\n          {props.showBalance ? <th>Balance</th> : null}\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.coinData.slice(props.firstCoin, props.firstCoin + props.count).map(value => {\r\n              return <Coin \r\n                    key={value.key ? value.key : value.ticker} \r\n                    handleRefresh = {props.handleRefresh} \r\n                    rank={value.rank} \r\n                    name={value.name} \r\n                    ticker={value.ticker} \r\n                    price={value.price}\r\n                    market_cap={value.market_cap}\r\n                    balance={value.balance}\r\n                    showBalance={props.showBalance}\r\n                    tickerId={value.key}/>\r\n            }\r\n          )\r\n        \r\n        }\r\n      </tbody>\r\n    </Table>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section `\r\n    border: 1px solid white;\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nexport default function AccountBalance (props) {\r\n    const buttonText = props.showBalance ? \"Hide Balance\" : \"Show Balance\";\r\n    const balanceText = props.showBalance ? `Balance = ${props.amount}` : \"\";\r\n    return (\r\n        <Section>\r\n            {/* Balance = ${props.amount}   */}\r\n            {balanceText}\r\n            <button onClick={props.handleShowBalance}>{buttonText}</button>\r\n        </Section>\r\n    )\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired,\r\n};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport logo from './logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header `\r\n    background-color: #282c34;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst H1 = styled.h1 `\r\n    font-size: 4rem;\r\n    color: white;\r\n`;\r\n\r\nconst Img = styled.img `\r\n  height: 8rem;\r\n  pointer-events: none;\r\n`;\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Img src={logo} alt=\"React logo\" />\r\n                <H1>\r\n                    Coin Exchange\r\n                </H1>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section `\r\n    font-size: 1rem;\r\n    text-align: left;\r\n    padding: 0.5rem 0 0.5rem 0.5rem;\r\n`;\r\n\r\nexport default function BottomControls (props) {\r\n    return (\r\n        <Section>\r\n            <button onClick={props.handlePrevPage}>Previous Page</button>\r\n            <button onClick={props.handleNextPage}>Next Page</button>\r\n            <button onClick={props.handleLoadMoreCoins}>Load More</button>\r\n            showing {props.firstCoin + 1} to {props.firstCoin + props.count}\r\n        </Section>\r\n    )\r\n}\r\n\r\nBottomControls.propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n};","import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport BottomControls from './components/BottomControls';\nimport axios from 'axios';\n//import {v4 as uuidv4} from 'uuid';\n\nconst tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\nconst INITIAL_COIN_COUNT = 10;\n\nfunction formatPrice (price) {\n  return parseFloat(Number(price).toFixed(2));\n}\n\nexport default function App (props) {\n\n  const [balance, setBalance] = useState(1000);\n  const [showBalance, setShwoBalance] = useState(true);\n  const [coinData, setCoinData] = useState([]);\n  const [coinCount, setCoinCount] = useState(INITIAL_COIN_COUNT);\n  const [firstCoin, setFirstCoin] = useState(0);\n  \n  const componentDidMount = async () => {\n    //console.log(\"componentDidMount\");\n    const coinsResponse = await axios.get('https://api.coinpaprika.com/v1/tickers');\n    coinsResponse.data.sort(function (a, b) {return a.rank - b.rank;});\n    let coinPriceData = coinsResponse.data.map(function(coin) {\n      return {\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n        market_cap: formatPrice(coin.quotes.USD.market_cap),\n        rank: coin.rank\n      };\n    })\n    setCoinData(coinPriceData);\n  }\n\n  const componentDidUpdate = () => {\n    console.log(\"componentDidUpdate\");\n  }\n\n  useEffect(function() {\n    if (coinData.length === 0) {\n      //component did mount\n      componentDidMount();\n    }\n    else {\n      // component update\n      componentDidUpdate();\n    }\n  })\n\n  const handleRefresh = async (changeValueTickerId) =>\n  {\n    let response = await axios.get( tickerUrl + changeValueTickerId);\n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newMarketCap = formatPrice(response.data.quotes.USD.market_cap);\n    let refreshedData = coinData.map((values) => {\n      let newValues = {...values};\n      if (newValues.key === changeValueTickerId) {\n        newValues.price = newPrice;\n        newValues.market_cap = newMarketCap;\n      }\n      return newValues;\n    })\n    setCoinData(refreshedData);\n  }\n\n  const handleShowBalance = () =>\n  {\n    let newShowBalance = !showBalance;\n    setShwoBalance(newShowBalance);\n  }\n\n  const handleLoadMoreCoins = () =>\n  {\n    setCoinCount(coinCount + INITIAL_COIN_COUNT);\n  }\n\n  const handlePrevPage = () =>\n  {\n    setFirstCoin(Math.max(firstCoin - coinCount, 0));\n  }\n\n  const handleNextPage = () =>\n  {\n    setFirstCoin(firstCoin + coinCount);\n  }\n\n  return (\n    <div className=\"App\">\n      <ExchangeHeader/>\n      <AccountBalance amount={balance} showBalance={showBalance} handleShowBalance={handleShowBalance}/>\n      <CoinList coinData={coinData} firstCoin={firstCoin} count={coinCount} handleRefresh={handleRefresh} showBalance={showBalance} />\n      <BottomControls count={coinCount} firstCoin={firstCoin} handleLoadMoreCoins={handleLoadMoreCoins} handleNextPage={handleNextPage} handlePrevPage={handlePrevPage}/>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}